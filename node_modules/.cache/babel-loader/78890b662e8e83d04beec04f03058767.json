{"ast":null,"code":"var _jsxFileName = \"/home/shivani/Desktop/hacktoberfest/react-day-night-toggle-app/src/components/Toggle.js\";\nimport React from 'react';\nimport { func, string } from 'prop-types';\nimport styled from 'styled-components';\nimport { ReactComponent as MoonIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!icons/moon.svg\";\nimport { ReactComponent as SunIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!icons/sun.svg\";\nconst ToggleContainer = styled.button`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  background: ${({\n  theme\n}) => theme.gradient};\n  width: 8rem;\n  height: 3.5rem;\n  margin: 0 auto;\n  border-radius: 30px;\n  border: 2px solid ${({\n  theme\n}) => theme.toggleBorder};\n  font-size: 0.5rem;\n  padding: 0.5rem;\n  overflow: hidden;\n  cursor: pointer;\n\n  svg {\n    width: 2.5rem;\n    height: auto;\n    transition: all 0.3s linear;\n\n    &:first-child {\n      transform: ${({\n  lightTheme\n}) => lightTheme ? 'translateY(0)' : 'translateY(100px)'};\n    }\n\n    &:nth-child(2) {\n      transform: ${({\n  lightTheme\n}) => lightTheme ? 'translateY(-100px)' : 'translateY(0)'};\n    }\n  }\n`;\n\nconst Toggle = ({\n  theme,\n  toggleTheme\n}) => {\n  const isLight = theme === 'light';\n  return /*#__PURE__*/React.createElement(ToggleContainer, {\n    lightTheme: isLight,\n    onClick: toggleTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SunIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MoonIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};\n\nToggle.propTypes = {\n  toggleTheme: func.isRequired,\n  theme: string.isRequired\n};\nexport default Toggle;","map":{"version":3,"sources":["/home/shivani/Desktop/hacktoberfest/react-day-night-toggle-app/src/components/Toggle.js"],"names":["React","func","string","styled","ToggleContainer","button","theme","gradient","toggleBorder","lightTheme","Toggle","toggleTheme","isLight","propTypes","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,YAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAKA,MAAMC,eAAe,GAAGD,MAAM,CAACE,MAAO;;;;gBAItB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,QAAS;;;;;sBAKxB,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,YAAa;;;;;;;;;;;;mBAYrC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoBA,UAAU,GAAG,eAAH,GAAqB,mBAAoB;;;;mBAIvE,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAoBA,UAAU,GAAG,oBAAH,GAA0B,eAAgB;;;CAzB3F;;AA+BA,MAAMC,MAAM,GAAG,CAAC;AAAEJ,EAAAA,KAAF;AAASK,EAAAA;AAAT,CAAD,KAA4B;AACzC,QAAMC,OAAO,GAAGN,KAAK,KAAK,OAA1B;AAEA,sBACE,oBAAC,eAAD;AAAiB,IAAA,UAAU,EAAEM,OAA7B;AAAsC,IAAA,OAAO,EAAED,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CATD;;AAWAD,MAAM,CAACG,SAAP,GAAmB;AACjBF,EAAAA,WAAW,EAAEV,IAAI,CAACa,UADD;AAEjBR,EAAAA,KAAK,EAAEJ,MAAM,CAACY;AAFG,CAAnB;AAKA,eAAeJ,MAAf","sourcesContent":["import React from 'react'\nimport { func, string } from 'prop-types';\nimport styled from 'styled-components';\n\nimport { ReactComponent as MoonIcon } from 'icons/moon.svg';\nimport { ReactComponent as SunIcon } from 'icons/sun.svg';\n\nconst ToggleContainer = styled.button`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  background: ${({ theme }) => theme.gradient};\n  width: 8rem;\n  height: 3.5rem;\n  margin: 0 auto;\n  border-radius: 30px;\n  border: 2px solid ${({ theme }) => theme.toggleBorder};\n  font-size: 0.5rem;\n  padding: 0.5rem;\n  overflow: hidden;\n  cursor: pointer;\n\n  svg {\n    width: 2.5rem;\n    height: auto;\n    transition: all 0.3s linear;\n\n    &:first-child {\n      transform: ${({ lightTheme }) => lightTheme ? 'translateY(0)' : 'translateY(100px)'};\n    }\n\n    &:nth-child(2) {\n      transform: ${({ lightTheme }) => lightTheme ? 'translateY(-100px)' : 'translateY(0)'};\n    }\n  }\n`;\n\n\nconst Toggle = ({ theme, toggleTheme }) => {\n  const isLight = theme === 'light';\n\n  return (\n    <ToggleContainer lightTheme={isLight} onClick={toggleTheme} >\n      <SunIcon />\n      <MoonIcon />\n    </ToggleContainer>\n  );\n};\n\nToggle.propTypes = {\n  toggleTheme: func.isRequired,\n  theme: string.isRequired,\n}\n\nexport default Toggle;\n"]},"metadata":{},"sourceType":"module"}